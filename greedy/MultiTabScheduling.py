# 멀티탭 스케줄링
# 시간 제한	메모리 제한	제출	정답	맞은 사람	정답 비율
# 2 초	128 MB	11681	2897	2193	25.764%
# 문제
# 기숙사에서 살고 있는 준규는 한 개의 멀티탭을 이용하고 있다. 준규는 키보드, 헤어드라이기, 핸드폰 충전기, 디지털 카메라 충전기 등 여러 개의 전기용품을 사용하면서 어쩔 수 없이 각종 전기용품의 플러그를 뺐다 꽂았다 하는 불편함을 겪고 있다. 그래서 준규는 자신의 생활 패턴을 분석하여, 자기가 사용하고 있는 전기용품의 사용순서를 알아내었고, 이를 기반으로 플러그를 빼는 횟수를 최소화하는 방법을 고안하여 보다 쾌적한 생활환경을 만들려고 한다.
#
# 예를 들어 3 구(구멍이 세 개 달린) 멀티탭을 쓸 때, 전기용품의 사용 순서가 아래와 같이 주어진다면,
#
# 키보드
# 헤어드라이기
# 핸드폰 충전기
# 디지털 카메라 충전기
# 키보드
# 헤어드라이기
# 키보드, 헤어드라이기, 핸드폰 충전기의 플러그를 순서대로 멀티탭에 꽂은 다음 디지털 카메라 충전기 플러그를 꽂기 전에 핸드폰충전기 플러그를 빼는 것이 최적일 것이므로 플러그는 한 번만 빼면 된다.
#
# 입력
# 첫 줄에는 멀티탭 구멍의 개수 N (1 ≤ N ≤ 100)과 전기 용품의 총 사용횟수 K (1 ≤ K ≤ 100)가 정수로 주어진다. 두 번째 줄에는 전기용품의 이름이 K 이하의 자연수로 사용 순서대로 주어진다. 각 줄의 모든 정수 사이는 공백문자로 구분되어 있다.
#
# 출력
# 하나씩 플러그를 빼는 최소의 횟수를 출력하시오.
#
# 예제 입력 1
# 2 7
# 2 3 2 3 1 2 7
# 예제 출력 1
# 2
def solution(n, l, k):
    cnt = 0
    # 탭 만들어주기
    tab = [0] * n
    # 물건 사용 횟수
    things = [0] * (k + 1)

    # 0번 인덱스 초기화
    things[0] = 1e9
    # 물건 수들 초기화
    for thing in l:
        things[thing] += 1

    # 순서대로 꼽아보기
    for thing in l:
        # 모든 탭이 차있고
        if all(tab):
            # 지금 탭이 꼽힌게 아니면
            if thing not in tab:
                mincode = 0
                # 탭을 돌면서
                for code in tab:
                    # 사용횟수 작은 코드 찾기
                    if things[mincode] > things[code]:
                        # print('coodde',code, things[code])
                        # 바꿔준다
                        mincode = code

                # 코드 바꿔쥐기
                tab[tab.index(mincode)] = thing
                # 하나 올려주기
                cnt += 1
        # 탭이 비어있으면
        else:
            # 코드를 꼽아준다
            for code in tab:
                if code == 0:
                    tab[tab.index(code)] = thing
                    break
        # print(tab)

    # print(things)
    return cnt


# 27% 에서 탈락
# 사용횟수기반 알고리즘
if __name__ == '__main__':
    # 플러그를 빼는 최소횟수
    n = 2
    k = 7
    l = [2, 3, 2, 3, 1, 2, 7]

    n, k = map(int, input().split())
    l = list(map(int, input().split()))
    print(solution(n, l, k))

#반례 1
# 3 100
# 56 71 70 25 52 77 76 8 68 71 51 65 13 23 7 16 19 54 95 18 86 74 29 76 61 93 44 96 32 72 64 19 50 49 22 14 7 64 24 83 6 3 2 76 99 7 76 100 60 60 6 50 90 49 27 51 37 61 16 84 89 51 73 28 90 77 73 39 78 96 78 13 92 54 70 69 62 78 7 75 30 67 97 98 19 86 90 90 2 39 41 58 57 84 19 8 52 39 26 7
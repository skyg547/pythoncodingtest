# https://www.acmicpc.net/problem/2617
# 구슬찾기


# 구슬 중에서 무게가 전체의 중간인 (무게 순서로 (N+1)/2번째) 구슬을 찾기 위해서 아래와 같은 일
# 한 쌍의 구슬을 골라서 양팔 저울의 양쪽에 하나씩 올려 보면 어느 쪽이 무거운가를 알 수 있다.
# 이렇게 M개의 쌍을 골라서 각각 양팔 저울에 올려서 어느 것이 무거운가를 모두 알아냈다. 이 결과를 이용하여 무게가 중간이 될 가능성이 전혀 없는 구슬들은 먼저 제외


# 구슬 2번이 구슬 1번보다 무겁다.
# 구슬 4번이 구슬 3번보다 무겁다.
# 구슬 5번이 구슬 1번보다 무겁다.
# 구슬 4번이 구슬 2번보다 무겁다.


# 앞 번호의 구슬이 뒤 번호의 구슬보다 무겁다는 것
def solution(n, l):
    answer = 0
    weight = [0] * (n + 1)
    # 솔트
    l.sort(key=lambda x: x[1])

    # 2번째 꺼보다 무것다
    for i in l:
        weight[i[0]] = weight[i[1]] + 1

    print(weight)
    return answer


if __name__ == '__main__':
    n, m = 5, 4
    l = [[2, 1],
         [4, 3],
         [5, 1],
         [4, 2]]

    print(solution(n, l))

# 알고리즘 출제 구현 빈도가 높은것
# 그리디, 구현, DFS/BFS를 활용한 탐색 문제
# 그리디는 실제로 자주 출제

# 가끔 다이나믹 프로그래밍, 그래프 이론 문제 출제 -> but 난이도가 높지 않은 경향

# 정렬, 그리디, 구현, DFS/BFS, 최단경로, 다이나믹 프로그래밍, 기타 그래프 ㅣ올ㄴ

# 복잡한 문제에서는 정렬, 다이나믹 프로그래밍, 이진탐색, 구현 등 개념이 모두 사용

# 카카오 문자열 선언, -> 문제를 바르게 읽오 예외 상황을 적절히 처리하는 방식

# 삼성전자 완전 탐색, DFS/BFS, 구현 문제 가장 선호

# 상위 5% 미만이 이 문제를 전부 풀수 있다
# 전체 문제 중 절반 가량을 정확히 해결 할수 있다면 합격할수 있다. 평균 70% 문제 풀면 합격

# 라인 주요 문제 유형, 구현 , 문자열, 자료구조
# 삼성 전자, 완전탐색, 시물레이션 , DFS/BFS 2문제 합격 안정권, 1문제 빠르게 풀면 합격
# 삼성전자, 카카오, 라인, 완전탐색, 시물레이션, 구현, DFS/BFS,
# 카카오 구현 이진 탐색 자료구조 , 2차 추천 시스템 개발
# 탐색, 구현, 문자열, 다이나믹 프로그래밍
# 자료구조 완전 탐색 구현


import time

start_time = time.time();
# 측정 시작

# 프로그램 소스 코드
end_time = time.time();
print("time : ", end_time - start_time) # 수행 시간 출력

print(*[1,3,4,21,4])

